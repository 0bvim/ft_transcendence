/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  TournamentScoring,
  TournamentScoringInterface,
} from "../../contracts/TournamentScoring";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tournamentId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "string",
        name: "userId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "achievementType",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "score",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "AchievementRecorded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "matchId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tournamentId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "string",
        name: "winnerId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "player1Score",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "player2Score",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "MatchCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tournamentId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "resultHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ResultVerified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tournamentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "winner",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "TournamentCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tournamentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "TournamentCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tournamentId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "userId",
        type: "string",
      },
      {
        internalType: "string",
        name: "displayName",
        type: "string",
      },
      {
        internalType: "string",
        name: "participantType",
        type: "string",
      },
    ],
    name: "addParticipant",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tournamentId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "winnerId",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "finalPositions",
        type: "string[]",
      },
    ],
    name: "completeTournament",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "maxParticipants",
        type: "uint8",
      },
    ],
    name: "createTournament",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "matchId",
        type: "uint256",
      },
    ],
    name: "getMatch",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tournamentId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "round",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "player1Id",
        type: "string",
      },
      {
        internalType: "string",
        name: "player2Id",
        type: "string",
      },
      {
        internalType: "string",
        name: "winnerId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "player1Score",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "player2Score",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "completedAt",
        type: "uint256",
      },
      {
        internalType: "enum TournamentScoring.MatchStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "resultHash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tournamentId",
        type: "uint256",
      },
    ],
    name: "getTournament",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "completedAt",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "maxParticipants",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "currentParticipants",
        type: "uint8",
      },
      {
        internalType: "enum TournamentScoring.TournamentStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "isVerified",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTournamentCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "userId",
        type: "string",
      },
    ],
    name: "getUserAchievements",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tournamentId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "userId",
            type: "string",
          },
          {
            internalType: "string",
            name: "achievementType",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "score",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "proofHash",
            type: "bytes32",
          },
        ],
        internalType: "struct TournamentScoring.Achievement[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "userId",
        type: "string",
      },
    ],
    name: "getUserTournaments",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "matches",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tournamentId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "round",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "player1Id",
        type: "string",
      },
      {
        internalType: "string",
        name: "player2Id",
        type: "string",
      },
      {
        internalType: "string",
        name: "winnerId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "player1Score",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "player2Score",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "completedAt",
        type: "uint256",
      },
      {
        internalType: "enum TournamentScoring.MatchStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "resultHash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tournamentId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "round",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "player1Id",
        type: "string",
      },
      {
        internalType: "string",
        name: "player2Id",
        type: "string",
      },
      {
        internalType: "string",
        name: "winnerId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "player1Score",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "player2Score",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "resultHash",
        type: "bytes32",
      },
    ],
    name: "recordMatchResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tournamentId",
        type: "uint256",
      },
    ],
    name: "startTournament",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tournaments",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "completedAt",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "maxParticipants",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "currentParticipants",
        type: "uint8",
      },
      {
        internalType: "enum TournamentScoring.TournamentStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "isVerified",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userAchievements",
    outputs: [
      {
        internalType: "uint256",
        name: "tournamentId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "userId",
        type: "string",
      },
      {
        internalType: "string",
        name: "achievementType",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "score",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "proofHash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userTournaments",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "verifiedResults",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resultHash",
        type: "bytes32",
      },
    ],
    name: "verifyMatchResult",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a33610023565b60018055610073565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b612ae480620000836000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad578063cca25a0e11610071578063cca25a0e146102a3578063cd2c5952146102b6578063d7036131146102d6578063e01c8a78146102f9578063f2fde38b1461030c57600080fd5b8063715018a6146102355780637503e1b71461023d57806379cb5a79146102505780638306533c146102635780638da5cb5b1461028857600080fd5b80633d092b3d116100f45780633d092b3d1461019f5780634768d4ef146101c95780636138e7a2146101dc578063651ea9431461020f5780636be6116f1461022257600080fd5b8063078c51f0146101265780631a5bd7fc1461014157806321c21f991461016a5780632c689a5f1461018a575b600080fd5b61012e61031f565b6040519081526020015b60405180910390f35b61015461014f3660046120e5565b61032f565b6040516101389a99989796959493929190612164565b61017d6101783660046122a9565b61053f565b60405161013891906122e6565b61019d6101983660046123ab565b610708565b005b6101b26101ad3660046120e5565b610cd2565b6040516101389b9a99989796959493929190612469565b6101b26101d73660046120e5565b610f72565b6101ff6101ea3660046120e5565b60009081526007602052604090205460ff1690565b6040519015158152602001610138565b61019d61021d3660046120e5565b611168565b61012e6102303660046124fb565b6112ef565b61019d61132f565b61015461024b3660046120e5565b611343565b61019d61025e366004612540565b6114b7565b6102766102713660046124fb565b6118e8565b60405161013896959493929190612633565b6000546040516001600160a01b039091168152602001610138565b61012e6102b136600461267d565b611a60565b6102c96102c43660046122a9565b611be3565b60405161013891906126f1565b6101ff6102e43660046120e5565b60076020526000908152604090205460ff1681565b61019d610307366004612735565b611c53565b61019d61031a3660046127c7565b611f69565b600061032a60025490565b905090565b600060608060008060008060008060008a60008111801561035257506002548111155b61039f5760405162461bcd60e51b8152602060048201526019602482015278151bdd5c9b985b595b9d08191bd95cc81b9bdd08195e1a5cdd603a1b60448201526064015b60405180910390fd5b60008c8152600360208190526040909120805491810154600482015460058301546006840154600a850154600186018054969796909560028901956001600160a01b03909116949093909260ff808316936101008404821693620100009004821692909116908990610410906127f7565b80601f016020809104026020016040519081016040528092919081815260200182805461043c906127f7565b80156104895780601f1061045e57610100808354040283529160200191610489565b820191906000526020600020905b81548152906001019060200180831161046c57829003601f168201915b5050505050985087805461049c906127f7565b80601f01602080910402602001604051908101604052809291908181526020018280546104c8906127f7565b80156105155780601f106104ea57610100808354040283529160200191610515565b820191906000526020600020905b8154815290600101906020018083116104f857829003601f168201915b505050505097509b509b509b509b509b509b509b509b509b509b5050509193959799509193959799565b60606005826040516105519190612831565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b828210156106fd57838290600052602060002090600602016040518060c0016040529081600082015481526020016001820180546105bc906127f7565b80601f01602080910402602001604051908101604052809291908181526020018280546105e8906127f7565b80156106355780601f1061060a57610100808354040283529160200191610635565b820191906000526020600020905b81548152906001019060200180831161061857829003601f168201915b5050505050815260200160028201805461064e906127f7565b80601f016020809104026020016040519081016040528092919081815260200182805461067a906127f7565b80156106c75780601f1061069c576101008083540402835291602001916106c7565b820191906000526020600020905b8154815290600101906020018083116106aa57829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820154815250508152602001906001019061057f565b505050509050919050565b6000888152600360208190526040909120015488906001600160a01b031633146107445760405162461bcd60e51b81526004016103969061284d565b61074c611fe2565b600160008a81526003602081905260409091206006015462010000900460ff169081111561077c5761077c61214e565b146107c15760405162461bcd60e51b8152602060048201526015602482015274546f75726e616d656e74206e6f742061637469766560581b6044820152606401610396565b866040516020016107d29190612831565b60405160208183030381529060405280519060200120856040516020016107f99190612831565b6040516020818303038152906040528051906020012014806108665750856040516020016108279190612831565b604051602081830303815290604052805190602001208560405160200161084e9190612831565b60405160208183030381529060405280519060200120145b6108a35760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b2103bb4b73732b960911b6044820152606401610396565b6108b1600280546001019055565b60006108bc60025490565b90506040518061016001604052808281526020018b81526020018a60ff1681526020018981526020018881526020018781526020018681526020018581526020014281526020016002808111156109155761091561214e565b815260209081018590526000838152600482526040908190208351815591830151600183015582015160028201805460ff191660ff9092169190911790556060820151600382019061096790826128cc565b506080820151600482019061097c90826128cc565b5060a0820151600582019061099190826128cc565b5060c0820151600682015560e08201516007820155610100820151600882015561012082015160098201805460ff191660018360028111156109d5576109d561214e565b02179055506101409190910151600a9091015560008a8152600360209081526040808320600981018054600181018255908552928420909201849055918c905290516008820190610a27908990612831565b9081526040519081900360200190206006018054906000610a47836129a2565b919050555088604051602001610a5d9190612831565b6040516020818303038152906040528051906020012087604051602001610a849190612831565b6040516020818303038152906040528051906020012014610aa55784610aa7565b855b8160080188604051610ab99190612831565b90815260200160405180910390206005016000828254610ad991906129bb565b9091555050604051600090610af2908b90602001612831565b6040516020818303038152906040528051906020012088604051602001610b199190612831565b6040516020818303038152906040528051906020012014610b3a5789610b3c565b885b905089604051602001610b4f9190612831565b6040516020818303038152906040528051906020012081604051602001610b769190612831565b6040516020818303038152906040528051906020012014610b975785610b99565b865b8260080182604051610bab9190612831565b90815260200160405180910390206005016000828254610bcb91906129bb565b9250508190555060018260080182604051610be69190612831565b9081526040805160209281900383018120600401805461ff0019166101009515159590950294909417909355600088815260079092529020805460ff19166001179055610c34908990612831565b60408051918290038220898352602083018990524283830152905190918e9186917f836186303bbe09e2c2865fc00ac88d8a3bae68926120a3890ca042f93b9086c7919081900360600190a4848c7fd9230000f5ca3ab06948de516a3c53d239a1a89563ee771588e681b9e6f3193c42604051610cb391815260200190565b60405180910390a3505050610cc760018055565b505050505050505050565b6000806000606080606060008060008060008b6000600460008381526020019081526020016000206000015411610d425760405162461bcd60e51b815260206004820152601460248201527313585d18da08191bd95cc81b9bdd08195e1a5cdd60621b6044820152606401610396565b6000600460008f81526020019081526020016000209050806000015481600101548260020160009054906101000a900460ff168360030184600401856005018660060154876007015488600801548960090160009054906101000a900460ff168a600a0154878054610db3906127f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610ddf906127f7565b8015610e2c5780601f10610e0157610100808354040283529160200191610e2c565b820191906000526020600020905b815481529060010190602001808311610e0f57829003601f168201915b50505050509750868054610e3f906127f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610e6b906127f7565b8015610eb85780601f10610e8d57610100808354040283529160200191610eb8565b820191906000526020600020905b815481529060010190602001808311610e9b57829003601f168201915b50505050509650858054610ecb906127f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610ef7906127f7565b8015610f445780601f10610f1957610100808354040283529160200191610f44565b820191906000526020600020905b815481529060010190602001808311610f2757829003601f168201915b505050505095509c509c509c509c509c509c509c509c509c509c509c50505091939597999b90929496989a50565b60046020526000908152604090208054600182015460028301546003840180549394929360ff9092169291610fa6906127f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610fd2906127f7565b801561101f5780601f10610ff45761010080835404028352916020019161101f565b820191906000526020600020905b81548152906001019060200180831161100257829003601f168201915b505050505090806004018054611034906127f7565b80601f0160208091040260200160405190810160405280929190818152602001828054611060906127f7565b80156110ad5780601f10611082576101008083540402835291602001916110ad565b820191906000526020600020905b81548152906001019060200180831161109057829003601f168201915b5050505050908060050180546110c2906127f7565b80601f01602080910402602001604051908101604052809291908181526020018280546110ee906127f7565b801561113b5780601f106111105761010080835404028352916020019161113b565b820191906000526020600020905b81548152906001019060200180831161111e57829003601f168201915b505050506006830154600784015460088501546009860154600a90960154949592949193509160ff16908b565b6000818152600360208190526040909120015481906001600160a01b031633146111a45760405162461bcd60e51b81526004016103969061284d565b816000811180156111b757506002548111155b6111ff5760405162461bcd60e51b8152602060048201526019602482015278151bdd5c9b985b595b9d08191bd95cc81b9bdd08195e1a5cdd603a1b6044820152606401610396565b600083815260036020526040812090600682015462010000900460ff16600381111561122d5761122d61214e565b1461127a5760405162461bcd60e51b815260206004820152601a60248201527f546f75726e616d656e7420616c726561647920737461727465640000000000006044820152606401610396565b6006810154600461010090910460ff1610156112d85760405162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f756768207061727469636970616e74730000000000000000006044820152606401610396565b600601805462ff0000191662010000179055505050565b8151602081840181018051600682529282019185019190912091905280548290811061131a57600080fd5b90600052602060002001600091509150505481565b61133761203b565b6113416000612095565b565b60036020526000908152604090208054600182018054919291611365906127f7565b80601f0160208091040260200160405190810160405280929190818152602001828054611391906127f7565b80156113de5780601f106113b3576101008083540402835291602001916113de565b820191906000526020600020905b8154815290600101906020018083116113c157829003601f168201915b5050505050908060020180546113f3906127f7565b80601f016020809104026020016040519081016040528092919081815260200182805461141f906127f7565b801561146c5780601f106114415761010080835404028352916020019161146c565b820191906000526020600020905b81548152906001019060200180831161144f57829003601f168201915b505050506003830154600484015460058501546006860154600a9096015494956001600160a01b03909316949193509160ff808216926101008304821692620100009004821691168a565b6000838152600360208190526040909120015483906001600160a01b031633146114f35760405162461bcd60e51b81526004016103969061284d565b60008481526003602052604090206001600682015462010000900460ff1660038111156115225761152261214e565b146115675760405162461bcd60e51b8152602060048201526015602482015274546f75726e616d656e74206e6f742061637469766560581b6044820152606401610396565b6006810154835161010090910460ff16146115bd5760405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a59081c1bdcda5d1a5bdb8818dbdd5b9d60521b6044820152606401610396565b60068101805462ff0000191662020000179055426005820155600a8101805460ff1916600117905560005b83518160ff1610156118a6576000848260ff168151811061160b5761160b6129d4565b6020026020010151905081600161162291906129ea565b83600801826040516116349190612831565b9081526040805160209281900383018120600401805460ff191660ff9586161790559182019052600080825290918416900361168d57506040805180820190915260068152652ba4a72722a960d11b6020820152611717565b8260ff166001036116be5750604080518082019091526009815268052554e4e45525f55560bc1b6020820152611717565b60038360ff16116116f3575060408051808201909152600d81526c14d1535257d1925390531254d5609a1b6020820152611717565b5060408051808201909152600b81526a141054951250d25410539560aa1b60208201525b60006040518060c001604052808a8152602001848152602001838152602001428152602001866008018560405161174e9190612831565b90815260200160405180910390206005015481526020018a85854260405160200161177c9493929190612a03565b6040516020818303038152906040528051906020012081525090506005836040516117a79190612831565b908152604051602091819003820190208054600180820183556000928352918390208451600690920201908155918301518392918201906117e890826128cc565b50604082015160028201906117fd90826128cc565b50606082015181600301556080820151816004015560a0820151816005015550508260405161182c9190612831565b6040518091039020897ff3e3feb91a247bccabfb48ed5a1e2b64295fa02cef8be2b8504f446b309217b08488600801876040516118699190612831565b9081526040519081900360200181206005015461188892914290612a48565b60405180910390a3505050808061189e90612a6d565b9150506115e8565b50847f6af1d038e8b9f1387129b895339d40447ec3a5405ecb0df064640265a64f5b5985426040516118d9929190612a8c565b60405180910390a25050505050565b8151602081840181018051600582529282019185019190912091905280548290811061191357600080fd5b90600052602060002090600602016000915091505080600001549080600101805461193d906127f7565b80601f0160208091040260200160405190810160405280929190818152602001828054611969906127f7565b80156119b65780601f1061198b576101008083540402835291602001916119b6565b820191906000526020600020905b81548152906001019060200180831161199957829003601f168201915b5050505050908060020180546119cb906127f7565b80601f01602080910402602001604051908101604052809291908181526020018280546119f7906127f7565b8015611a445780601f10611a1957610100808354040283529160200191611a44565b820191906000526020600020905b815481529060010190602001808311611a2757829003601f168201915b5050505050908060030154908060040154908060050154905086565b600080845111611ab25760405162461bcd60e51b815260206004820152601f60248201527f546f75726e616d656e74206e616d652063616e6e6f7420626520656d707479006044820152606401610396565b60048260ff1610158015611aca575060088260ff1611155b611b165760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964207061727469636970616e7420636f756e74000000000000006044820152606401610396565b611b24600280546001019055565b6000611b2f60025490565b600081815260036020526040902081815590915060018101611b5187826128cc565b5060028101611b6086826128cc565b50600381018054336001600160a01b03199091168117909155426004830181905560068301805462ffffff191660ff8816179055600a8301805460ff1916905560405184917fcdfdb827f082d500a05e4fa08342c82d28377a8d0f9616f1a71d3eb1fea4fa1291611bd2918b91612a8c565b60405180910390a350949350505050565b6060600682604051611bf59190612831565b9081526040805191829003602090810183208054808302850183019093528284529190830182828015611c4757602002820191906000526020600020905b815481526020019060010190808311611c33575b50505050509050919050565b6000848152600360208190526040909120015484906001600160a01b03163314611c8f5760405162461bcd60e51b81526004016103969061284d565b600085815260036020526040812090600682015462010000900460ff166003811115611cbd57611cbd61214e565b14611d185760405162461bcd60e51b815260206004820152602560248201527f546f75726e616d656e74206e6f7420616363657074696e67207061727469636960448201526470616e747360d81b6064820152608401610396565b600681015460ff8082166101009092041610611d6b5760405162461bcd60e51b8152602060048201526012602482015271151bdd5c9b985b595b9d081a5cc8199d5b1b60721b6044820152606401610396565b8060080185604051611d7d9190612831565b9081526040519081900360200190208054611d97906127f7565b159050611de65760405162461bcd60e51b815260206004820152601760248201527f5573657220616c726561647920726567697374657265640000000000000000006044820152606401610396565b604051806101200160405280868152602001858152602001848152602001428152602001600060ff168152602001600015158152602001600081526020016000815260200160008152508160080186604051611e429190612831565b90815260405190819003602001902081518190611e5f90826128cc565b5060208201516001820190611e7490826128cc565b5060408201516002820190611e8990826128cc565b5060608201516003820155608082015160048201805460a085015160ff90931661ffff1990911617610100921515830217905560c0830151600583015560e0830151600683015590910151600791820155810180546001810182556000918252602090912001611ef986826128cc565b50600681018054610100900460ff16906001611f1483612a6d565b91906101000a81548160ff021916908360ff16021790555050600685604051611f3d9190612831565b908152604051602091819003820190208054600181018255600091825291902001959095555050505050565b611f7161203b565b6001600160a01b038116611fd65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610396565b611fdf81612095565b50565b6002600154036120345760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610396565b6002600155565b6000546001600160a01b031633146113415760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610396565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156120f757600080fd5b5035919050565b60005b83811015612119578181015183820152602001612101565b50506000910152565b6000815180845261213a8160208601602086016120fe565b601f01601f19169290920160200192915050565b634e487b7160e01b600052602160045260246000fd5b60006101408c835280602084015261217e8184018d612122565b90508281036040840152612192818c612122565b6001600160a01b038b166060850152608084018a905260a0840189905260ff88811660c0860152871660e0850152915050600484106121d3576121d361214e565b836101008301528215156101208301529b9a5050505050505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612231576122316121f2565b604052919050565b600082601f83011261224a57600080fd5b813567ffffffffffffffff811115612264576122646121f2565b612277601f8201601f1916602001612208565b81815284602083860101111561228c57600080fd5b816020850160208301376000918101602001919091529392505050565b6000602082840312156122bb57600080fd5b813567ffffffffffffffff8111156122d257600080fd5b6122de84828501612239565b949350505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561238757603f19898403018552815160c08151855288820151818a87015261233b82870182612122565b91505087820151858203898701526123538282612122565b606084810151908801526080808501519088015260a09384015193909601929092525050938601939086019060010161230d565b509098975050505050505050565b803560ff811681146123a657600080fd5b919050565b600080600080600080600080610100898b0312156123c857600080fd5b883597506123d860208a01612395565b9650604089013567ffffffffffffffff808211156123f557600080fd5b6124018c838d01612239565b975060608b013591508082111561241757600080fd5b6124238c838d01612239565b965060808b013591508082111561243957600080fd5b506124468b828c01612239565b989b979a50959894979660a0860135965060c08601359560e00135945092505050565b60006101608d83528c602084015260ff8c1660408401528060608401526124928184018c612122565b905082810360808401526124a6818b612122565b905082810360a08401526124ba818a612122565b9150508660c08301528560e083015284610100830152600384106124e0576124e061214e565b61012082019390935261014001529998505050505050505050565b6000806040838503121561250e57600080fd5b823567ffffffffffffffff81111561252557600080fd5b61253185828601612239565b95602094909401359450505050565b60008060006060848603121561255557600080fd5b8335925060208085013567ffffffffffffffff8082111561257557600080fd5b61258188838901612239565b9450604087013591508082111561259757600080fd5b818701915087601f8301126125ab57600080fd5b8135818111156125bd576125bd6121f2565b8060051b6125cc858201612208565b918252838101850191858101908b8411156125e657600080fd5b86860192505b83831015612622578235858111156126045760008081fd5b6126128d89838a0101612239565b83525091860191908601906125ec565b809750505050505050509250925092565b86815260c06020820152600061264c60c0830188612122565b828103604084015261265e8188612122565b60608401969096525050608081019290925260a0909101529392505050565b60008060006060848603121561269257600080fd5b833567ffffffffffffffff808211156126aa57600080fd5b6126b687838801612239565b945060208601359150808211156126cc57600080fd5b506126d986828701612239565b9250506126e860408501612395565b90509250925092565b6020808252825182820181905260009190848201906040850190845b818110156127295783518352928401929184019160010161270d565b50909695505050505050565b6000806000806080858703121561274b57600080fd5b84359350602085013567ffffffffffffffff8082111561276a57600080fd5b61277688838901612239565b9450604087013591508082111561278c57600080fd5b61279888838901612239565b935060608701359150808211156127ae57600080fd5b506127bb87828801612239565b91505092959194509250565b6000602082840312156127d957600080fd5b81356001600160a01b03811681146127f057600080fd5b9392505050565b600181811c9082168061280b57607f821691505b60208210810361282b57634e487b7160e01b600052602260045260246000fd5b50919050565b600082516128438184602087016120fe565b9190910192915050565b6020808252601690820152752737ba103a37bab93730b6b2b73a1031b932b0ba37b960511b604082015260600190565b601f8211156128c757600081815260208120601f850160051c810160208610156128a45750805b601f850160051c820191505b818110156128c3578281556001016128b0565b5050505b505050565b815167ffffffffffffffff8111156128e6576128e66121f2565b6128fa816128f484546127f7565b8461287d565b602080601f83116001811461292f57600084156129175750858301515b600019600386901b1c1916600185901b1785556128c3565b600085815260208120601f198616915b8281101561295e5788860151825594840194600190910190840161293f565b508582101561297c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b6000600182016129b4576129b461298c565b5060010190565b808201808211156129ce576129ce61298c565b92915050565b634e487b7160e01b600052603260045260246000fd5b60ff81811683821601908111156129ce576129ce61298c565b84815260008451612a1b8160208501602089016120fe565b80830190508451612a338160208401602089016120fe565b01602081019390935250506040019392505050565b606081526000612a5b6060830186612122565b60208301949094525060400152919050565b600060ff821660ff8103612a8357612a8361298c565b60010192915050565b604081526000612a9f6040830185612122565b9050826020830152939250505056fea264697066735822122004c74aff938e99bb0e263c9f848c0911421d5c6ba67945c9ad80d139863bfe9e64736f6c63430008130033";

type TournamentScoringConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TournamentScoringConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TournamentScoring__factory extends ContractFactory {
  constructor(...args: TournamentScoringConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TournamentScoring & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TournamentScoring__factory {
    return super.connect(runner) as TournamentScoring__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TournamentScoringInterface {
    return new Interface(_abi) as TournamentScoringInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TournamentScoring {
    return new Contract(address, _abi, runner) as unknown as TournamentScoring;
  }
}
